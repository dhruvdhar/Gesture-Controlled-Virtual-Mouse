# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import cv2
import mediapipe as mp
import pyautogui
import time

# Initialize MediaPipe hands module
mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils

# Set up the webcam
cap = cv2.VideoCapture(0)

# Initialize the hands model
with mp_hands.Hands(max_num_hands=1, min_detection_confidence=0.5) as hands:
    while cap.isOpened():
        success, image = cap.read()
        if not success:
            print("Ignoring empty camera frame.")
            continue

        # Flip the image horizontally for a later selfie-view display
        image = cv2.flip(image, 1)

        # Convert the BGR image to RGB
        image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

        # Process the image and find hands
        results = hands.process(image_rgb)

        # Draw hand landmarks on the image
        if results.multi_hand_landmarks:
            for hand_landmarks in results.multi_hand_landmarks:
                mp_drawing.draw_landmarks(image, hand_landmarks, mp_hands.HAND_CONNECTIONS)

                # Get landmark positions for gesture recognition
                thumb_tip_y = hand_landmarks.landmark[mp_hands.HandLandmark.THUMB_TIP].y
                index_tip_y = hand_landmarks.landmark[mp_hands.HandLandmark.INDEX_FINGER_TIP].y
                middle_tip_y = hand_landmarks.landmark[mp_hands.HandLandmark.MIDDLE_FINGER_TIP].y

                # Determine the gesture based on landmark positions
                if thumb_tip_y < index_tip_y and middle_tip_y < index_tip_y:  # Thumb up gesture
                    cv2.putText(image, "Gesture: Left Click", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
                    pyautogui.click()  # Perform left click
                    time.sleep(1)  # Prevent multiple clicks in quick succession

                elif index_tip_y < middle_tip_y:  # Peace sign gesture
                    cv2.putText(image, "Gesture: Right Click", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
                    pyautogui.click(button='right')  # Perform right click
                    time.sleep(1)  # Prevent multiple clicks in quick succession

                elif thumb_tip_y > index_tip_y and middle_tip_y > index_tip_y:  # Fist gesture
                    cv2.putText(image, "Gesture: Scroll", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
                    pyautogui.scroll(-10)  # Scroll down; use positive value for scrolling up
                    time.sleep(1)  # Prevent multiple scrolls in quick succession

        # Display the resulting frame
        cv2.imshow('Hand Gesture Recognition', image)

        if cv2.waitKey(5) & 0xFF == 27:  # Press 'ESC' to exit
            break

# Release the webcam and destroy windows
cap.release()
cv2.destroyAllWindows()